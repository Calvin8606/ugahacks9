Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"NONE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"89ce1314-a641-4d99-8e74-9cc74546db23\" name=\"Changes\" comment=\"added log in form\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/app/screens/HomeScreen.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/screens/HomeScreen.tsx\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ClangdSettings\">\n    <option name=\"formatViaClangd\" value=\"false\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2c9sRfCNB7WWXj852HEk3SRcHME\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/untin/Documents/GitHub/hacks/ugahacks9/app&quot;\n  }\n}</component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"89ce1314-a641-4d99-8e74-9cc74546db23\" name=\"Changes\" comment=\"\" />\n      <created>1707535125147</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1707535125147</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"added log in form\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1707585442120</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1707585442120</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"added log in form\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1707586370569</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1707586370569</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"added log in form\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1707587932330</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1707587932330</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"added log in form\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1707588163386</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1707588163386</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"added log in form\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1707594093248</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1707594093248</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"added log in form\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1707594415284</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1707594415284</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"added log in form\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1707599230868</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1707599230868</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"added log in form\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added log in form\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c0b829fde17325ffb3a811c87513c23a084685ce)
+++ b/.idea/workspace.xml	(date 1707602055961)
@@ -6,6 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="89ce1314-a641-4d99-8e74-9cc74546db23" name="Changes" comment="added log in form">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/App.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/screens/HomeScreen.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/screens/HomeScreen.tsx" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -17,7 +18,6 @@
     <option name="formatViaClangd" value="false" />
   </component>
   <component name="Git.Settings">
-    <option name="PUSH_AUTO_UPDATE" value="true" />
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="2c9sRfCNB7WWXj852HEk3SRcHME" />
@@ -26,17 +26,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
-    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/untin/Documents/GitHub/hacks/ugahacks9/app&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.cidr.known.project.marker": "true",
+    "cf.first.check.clang-format": "false",
+    "cidr.known.project.marker": "true",
+    "git-widget-placeholder": "Merging master",
+    "last_opened_file_path": "C:/Users/untin/Documents/GitHub/hacks/ugahacks9/app"
   }
-}</component>
+}]]></component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -86,23 +86,7 @@
       <option name="project" value="LOCAL" />
       <updated>1707594093248</updated>
     </task>
-    <task id="LOCAL-00006" summary="added log in form">
-      <option name="closed" value="true" />
-      <created>1707594415284</created>
-      <option name="number" value="00006" />
-      <option name="presentableId" value="LOCAL-00006" />
-      <option name="project" value="LOCAL" />
-      <updated>1707594415284</updated>
-    </task>
-    <task id="LOCAL-00007" summary="added log in form">
-      <option name="closed" value="true" />
-      <created>1707599230868</created>
-      <option name="number" value="00007" />
-      <option name="presentableId" value="LOCAL-00007" />
-      <option name="project" value="LOCAL" />
-      <updated>1707599230868</updated>
-    </task>
-    <option name="localTasksCounter" value="8" />
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
Index: app/screens/HomeScreen.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState } from \"react\";\nimport { View, Text, Button, StyleSheet, FlatList } from \"react-native\";\nimport { Deposit, Transaction, User, Withdraw } from \"../App\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\n// @ts-ignore\nimport { EXPO_PUBLIC_BACKEND_URL } from \"@env\";\n\ninterface Props {\n  user: User;\n  setUserId: Function;\n  setUser: Function;\n}\n\nexport const HomeScreen = ({ user, setUserId, setUser }: Props) => {\n  useEffect(() => {\n    if (user.account) {\n      axios\n        .get(\n          `http://${\n            EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL\n          }/nessie?url=http://api.nessieisreal.com/accounts/${\n            user?.account._id\n          }/deposits/?key=bf8433e4df1dc693db643a4926845cbb`\n        )\n        .then((res: any) => {\n          setUser((prev: User) => ({\n            ...prev,\n            deposits: res.data as Deposit[],\n          }));\n        });\n\n      axios\n        .get(\n          `http://${\n            EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL\n          }/nessie?url=http://api.nessieisreal.com/accounts/${\n            user?.account._id\n          }/withdrawals/?key=bf8433e4df1dc693db643a4926845cbb`\n        )\n        .then((res: any) => {\n          console.log(\"HEEE\", res);\n          setUser((prev: User) => ({\n            ...(prev as User),\n            withdrawals: res.data as Withdraw[],\n          }));\n        });\n      const customHeaders = {\n        \"X-Custom-Header\": `http://api.nessieisreal.com/accounts/${user?.account?._id}/transfers?type=payer&key=bf8433e4df1dc693db643a4926845cbb`,\n      };\n      console.log(\"Custome head\", customHeaders);\n      axios\n        .get(\n          `http://${\n            EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL\n          }/nessie?url=http://api.nessieisreal.com/accounts/${\n            user?.account?._id\n          }/transfers?type=payer&key=bf8433e4df1dc693db643a4926845cbb`,\n          {\n            headers: customHeaders,\n          }\n        )\n        .then((res: any) => {\n          console.log(\"TRANS\", res);\n          setUser((prev: User) => ({\n            ...(prev as User),\n            transactionsTo: res.data as Transaction[],\n          }));\n        });\n      const customHeaders2 = {\n        \"X-Custom-Header\": `http://api.nessieisreal.com/accounts/${user?.account?._id}/transfers?type=payee&key=bf8433e4df1dc693db643a4926845cbb`,\n      };\n      axios\n        .get(\n          `http://${\n            EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL\n          }/nessie?url=http://api.nessieisreal.com/accounts/${\n            user?.account?._id\n          }/transfers?type=payee&key=bf8433e4df1dc693db643a4926845cbb`,\n          {\n            headers: customHeaders2,\n          }\n        )\n        .then((res: any) => {\n          console.log(\"TRANS\", res);\n          setUser((prev: User) => ({\n            ...(prev as User),\n            transactionsFrom: res.data as Transaction[],\n          }));\n        });\n    }\n  }, [user.account]);\n  interface roww {\n    _id: string;\n    amount: number;\n    type: string;\n    date: string;\n  }\n  type row = { type: string; amount: string; date: string };\n  const [rows, setRows] = useState<roww[]>();\n  useEffect(() => {\n    if (user.withdrawals && user.deposits) {\n      const withdraws = user?.withdrawals.map((withd) => {\n        return {\n          type: \"withdraw\",\n          amount: withd.amount,\n          date: withd.transaction_date,\n        } as roww;\n      });\n\n      const deposits = user?.deposits.map((withd) => {\n        return {\n          type: \"deposit\",\n          amount: withd.amount,\n          date: withd.transaction_date,\n        } as roww;\n      });\n\n      setRows([...deposits, ...withdraws]);\n    }\n  }, [user]);\n  return (\n    <View style={styles.container}>\n      <Text style={styles.balanceText}>Welcome {user.first_name}</Text>\n      {user.account && (\n        <Text style={styles.balanceText}>Balance ${user.account.balance}</Text>\n      )}\n      <Text style={styles.transactionsHeader}>Transactions</Text>\n      <FlatList\n        data={rows}\n        keyExtractor={(item) => `yoo ${Math.random()}`}\n        renderItem={({ item }) => {\n          // Capitalize the first letter and replace 'withdraw' with 'Withdraw' and 'deposit' with 'Deposit'\n          const transactionType =\n            item.type === 'withdraw'\n              ? 'Withdraw'\n              : item.type === 'deposit'\n              ? 'Deposit'\n              : item.type; // Adjust as needed for other types, if any\n\n          return (\n            <View style={styles.transactionRow}>\n              <Text\n                style={[\n                  styles.transactionText,\n                  item.type === 'deposit' ? styles.depositText : styles.withdrawText,\n                ]}\n              >\n                {transactionType} - {item.date}: ${item.amount}\n              </Text>\n            </View>\n          );\n        }}\n      />\n\n      <View style={styles.buttonContainer}>\n        <Button\n          title=\"Log out\"\n          onPress={() => {\n            AsyncStorage.removeItem(\"@storage_Key\");\n            setUserId(\"\");\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n    paddingHorizontal: 10,\n  },\n  balanceText: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  transactionsHeader: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  transactionRow: {\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\",\n  },\n  transactionText: {\n    fontSize: 16,\n  },\n  buttonContainer: {\n    position: \"absolute\",\n    bottom: 50,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n  },\n  transactionText: {\n      fontSize: 16,\n    },\n    depositText: {\n      color: 'green', // Choose a color for deposits\n    },\n    withdrawText: {\n      color: 'red', // Choose a color for withdrawals\n    },\n});\n\nexport default HomeScreen;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/screens/HomeScreen.tsx b/app/screens/HomeScreen.tsx
--- a/app/screens/HomeScreen.tsx	(revision c0b829fde17325ffb3a811c87513c23a084685ce)
+++ b/app/screens/HomeScreen.tsx	(date 1707602285144)
@@ -152,7 +152,6 @@
           );
         }}
       />
-
       <View style={styles.buttonContainer}>
         <Button
           title="Log out"
@@ -208,4 +207,4 @@
     },
 });
 
-export default HomeScreen;
\ No newline at end of file
+export default HomeScreen;
Index: app/App.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// App.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddFundsScreen from \"./screens/AddFundsScreen\";\nimport RemoveFundsScreen from \"./screens/RemoveFundsScreen\";\nimport {\n  View,\n  TextInput,\n  Button,\n  StyleSheet,\n  Alert,\n  TouchableOpacity,\n  Text,\n} from \"react-native\";\nimport { SignUpForm } from \"./screens/SignUpScreen\";\nimport { LoginForm } from \"./screens/LogInScreen\";\n// @ts-ignore\nimport { EXPO_PUBLIC_BACKEND_URL } from \"@env\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport DepositScreen from \"./screens/DepositScreen\";\nimport WithdrawScreen from \"./screens/WithdrawScreen\";\nconst Stack = createNativeStackNavigator();\nexport interface Address {\n  street_number: string;\n  street_name: string;\n  city: string;\n  state: string;\n  zip: string;\n}\n\nexport interface Account {\n  _id: string;\n  balance: number;\n  customer_id: string;\n  nickname: string;\n  reward: number;\n  type: string;\n}\n\nexport interface Deposit {\n  _id: string;\n  amount: number;\n  medium: string;\n  payee_id: string;\n  status: string;\n  transaction_date: string;\n  type: string;\n}\nexport interface Withdraw {\n  _id: string;\n  amount: number;\n  medium: string;\n  payer_id: string;\n  status: string;\n  transaction_date: string;\n  type: string;\n}\nexport interface Transaction {\n  _id: string;\n  amount: number;\n  medium: string;\n  payer_id: string;\n  payee_id: string;\n  status: string;\n  transaction_date: string;\n  type: string;\n}\n\nexport interface User {\n  _id: string;\n  first_name: string;\n  last_name: string;\n  address: Address;\n  account: Account;\n  deposits: Deposit[];\n  withdrawals: Withdraw[];\n  transactionsTo: Transaction[];\n  transactionsFrom: Transaction[];t\n}\nexport default function App() {\n  const [balance, setBalance] = useState(100); // Starting balance\n  const [userId, setUserId] = useState(\"\");\n  const [user, setUser] = useState<User | undefined>(undefined);\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem(\"@storage_Key\");\n      if (value !== null) {\n        console.log(\"key\", await value);\n        setUserId(value);\n        // value previously stored\n      }\n    } catch (e) {\n      // error reading value\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"USER\", user);\n  }, [user]);\n\n  console.log(EXPO_PUBLIC_BACKEND_URL);\n  useEffect(() => {\n    const storeData = async (value: string) => {\n      try {\n        await AsyncStorage.setItem(\"@storage_Key\", value);\n        const value2 = await AsyncStorage.getItem(\"@storage_Key\");\n        console.log(\"value4444\", value2);\n      } catch (e) {\n        // saving error\n      }\n    };\n    storeData(userId);\n    if (!userId) {\n      setUser(undefined);\n      return;\n    }\n    axios\n      .get(\n        `http://${\n          EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL\n        }/nessie?url=http://api.nessieisreal.com/customers/${userId}/?key=bf8433e4df1dc693db643a4926845cbb`\n      )\n      .then((response) => {\n        console.log(\"getting\");\n        console.log(response.data);\n        if (response.data) {\n          const userd = response.data;\n          //api.nessieisreal.com/customers/65c787c59683f20dd5188e4f/accounts/?key=bf8433e4df1dc693db643a4926845cbb\n          axios\n            .get(\n              `http://${\n                EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL\n              }/nessie?url=http://api.nessieisreal.com/customers/${userId}/accounts/?key=bf8433e4df1dc693db643a4926845cbb`\n            )\n            .then((res: any) => {\n              const accounts = res.data;\n              console.log(\"accounts\", res.data);\n              if (accounts?.length === 0) {\n                axios\n                  .post(\n                    `http://${\n                      EXPO_PUBLIC_BACKEND_URL ||\n                      process.env.EXPO_PUBLIC_BACKEND_URL\n                    }/nessie?url=http://api.nessieisreal.com/customers/${userId}/accounts/?key=bf8433e4df1dc693db643a4926845cbb`,\n                    {\n                      type: \"Checking\",\n                      nickname: \"string\",\n                      rewards: 0,\n                      balance: 500,\n                    }\n                  )\n                  .then((thirdres: any) => {\n                    console.log(\"third\", thirdres);\n                    setUser((prev) => ({\n                      ...(prev as User),\n                      account: thirdres.data.objectCreated as Account,\n                    }));\n                  });\n              } else {\n                axios\n                  .get(\n                    `http://${\n                      EXPO_PUBLIC_BACKEND_URL ||\n                      process.env.EXPO_PUBLIC_BACKEND_URL\n                    }/nessie?url=http://api.nessieisreal.com/customers/${userId}/accounts/?key=bf8433e4df1dc693db643a4926845cbb`\n                  )\n                  .then((test: any) => {\n                    console.log(\"ee\", test.data[0]);\n                    setUser((prev) => ({\n                      ...(prev as User),\n                      account: test.data[0] as Account,\n                    }));\n                  });\n              }\n            });\n          setUser(response.data as User);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error.message); // handle the error\n      });\n  }, [userId]);\n  const navigationRef = useRef() as React.MutableRefObject<any>;\n  const [menuVisible, setMenuVisible] = useState(false);\n  return (\n    <NavigationContainer ref={navigationRef}>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\">\n          {(props) => {\n            return !user?.account ? (\n              <SignUpForm setUserId={setUserId} userId={userId} />\n            ) : (\n              <HomeScreen setUser={setUser} setUserId={setUserId} user={user} />\n            );\n          }}\n        </Stack.Screen>\n        <Stack.Screen name=\"Add Funds\">\n          {(props) => <AddFundsScreen {...props} setBalance={setBalance} />}\n        </Stack.Screen>\n        <Stack.Screen name=\"Remove Funds\">\n          {(props) => <RemoveFundsScreen {...props} setBalance={setBalance} />}\n        </Stack.Screen>\n        <Stack.Screen name=\"Deposit\">\n          {(props) => {\n            return user?.account ? (\n              <DepositScreen {...props} user={user} />\n            ) : (\n              <SignUpForm setUserId={setUser} userId={userId}></SignUpForm>\n            );\n          }}\n        </Stack.Screen>\n        <Stack.Screen name=\"Withdraw\">\n          {(props) => {\n            return user?.account ? (\n              <WithdrawScreen {...props} user={user} />\n            ) : (\n              <SignUpForm setUserId={setUser} userId={userId}></SignUpForm>\n            );\n          }}\n        </Stack.Screen>\n      </Stack.Navigator>\n      <View style={styles.menuContainer}>\n        <TouchableOpacity\n          style={styles.menuButton}\n          onPress={() => setMenuVisible(!menuVisible)}\n        >\n          <Text style={styles.menuButtonText}>Menu</Text>\n        </TouchableOpacity>\n        {menuVisible && (\n          <View style={styles.menu}>\n            <Button\n              title=\"Deposit\"\n              onPress={() => {\n                // Navigation code for Add Funds\n                navigationRef.current?.navigate(\"Deposit\");\n              }}\n            />\n            <Button\n              title=\"Withdraw\"\n              onPress={() => {\n                navigationRef.current?.navigate(\"Withdraw\");\n                // Navigation code for Remove Funds\n              }}\n            />\n            <Button\n              title=\"Home\"\n              onPress={() => {\n                navigationRef.current?.navigate(\"Home\");\n                // Navigation code for Remove Funds\n              }}\n            />\n          </View>\n        )}\n      </View>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  menuContainer: {\n    position: \"absolute\",\n    bottom: 20,\n    left: 10,\n    zIndex: 1,\n  },\n  menuButton: {\n    backgroundColor: \"#007bff\",\n    padding: 10,\n    borderRadius: 20,\n  },\n  menuButtonText: {\n    color: \"#ffffff\",\n    textAlign: \"center\",\n  },\n  menu: {\n    marginTop: 5,\n  },\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/App.tsx b/app/App.tsx
--- a/app/App.tsx	(revision c0b829fde17325ffb3a811c87513c23a084685ce)
+++ b/app/App.tsx	(date 1707601983903)
@@ -78,7 +78,7 @@
   deposits: Deposit[];
   withdrawals: Withdraw[];
   transactionsTo: Transaction[];
-  transactionsFrom: Transaction[];t
+  transactionsFrom: Transaction[];
 }
 export default function App() {
   const [balance, setBalance] = useState(100); // Starting balance
